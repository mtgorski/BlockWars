@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = @"~/Views/Shared/_Layout.cshtml";
}
<div id="gameContainer" class="row"></div>
<div id="gameOver" hidden="hidden"><p>Game Over! <button id="playAgainButton" type="button" class="btn btn-info xobutton">Play Again!</button></div>
<script src="/lib/jquery/js/jquery.js"></script>
<script src="/lib/signalr/jquery.signalr.js"></script>
<script src="/signalr/hubs"></script>
<script>

    $(function () {
        var gameHub = $.connection.game;
        var currentGame;

        function playAgain() {
            $("#gameOver").hide();
            $("#gameContainer").empty();
            currentGame = null;
        }
        $("#playAgainButton").click(playAgain);
        
        gameHub.client.updateRegionInfo = function (leagueInfo) {

            if (currentGame == null) {
                currentGame = leagueInfo.League.LeagueId;
            }
            if (currentGame != leagueInfo.League.LeagueId) {
                $("#gameOver").show();
                $("#gameContainer .build-button").prop('disabled', true).off('click');
                return;
            }

            
            $.each(leagueInfo.Regions, function () {
                if ($("#" + this.RegionId).length === 0) {
                    var $newElement = $('<div>', { 'id': this.RegionId, 'class': 'region-container row' });
                    var $hud = $('<div>', {'class':'row'});
                    var $name = $('<div>', { 'class': 'region-name col-xs-6', 'style': 'font-size:30px' }).text(this.Name);
                    var name = this.Name;
                    var $click = $('<button>', { 'class': 'build-button col-xs-2' }).text('+').click(function () {
                        gameHub.server.buildBlock(currentGame, name);
                    });
                    $hud.append($name);
                    $newElement.append($hud);
                    var $blockCount = $('<div>', { 'class': 'region-count col-xs-4', 'style': 'color:red;font-size:30px' }).text(this.BlockCount);
                    $hud.append($blockCount);
                    $hud.append($click);

                    $blockDisplay = $('<div>', { 'class': 'block-display col-offset-xs-1 col-xs-9' });

                    var rows = 10;
                    for (var i = rows; i > 0; i--)
                    {
                        var $row = $('<div>', { 'class': 'row' });
                        for (var j = 0; j < 10; j++)
                        {
                            var $block = $('<div>', { 'class': 'block col-xs-1', 'data-number':i + j*10});
                            $row.append($block);
                        }
                        $blockDisplay.append($row);
                    }
                    $newElement.append($blockDisplay);
                    $("#gameContainer").append($newElement);
                }
                var regionSelector = "#" + this.RegionId;
                var blockCount = this.BlockCount;
                var blockFactor = getBlockFactor(blockCount);



                $(regionSelector + " .region-count").text(this.BlockCount);
                $(regionSelector + " .block").removeClass('built-block').filter(function () {
                    var number = $(this).data('number');
                    return number <= ((blockCount / blockFactor) % 100);
                }).addClass('built-block');
            });
        }

        function getBlockFactor(blockCount) {
            return 1;
        }

        $.connection.hub.start();
    });
</script>